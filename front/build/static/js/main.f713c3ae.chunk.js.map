{"version":3,"sources":["Navbar.tsx","ApiClient.ts","Config.ts","App.tsx","index.tsx"],"names":["Navbar","className","role","aria-label","href","extractData","response","data","graphConfig","App","useState","cycles","graphData","nodes","links","description","state","setState","useEffect","Axios","get","then","_","s","constructGraphDataFromPackages","packages","map","id","name","flatMap","p","uses","source","target","cycleClicked","cycleIndex","cycleId","showCompleteGraphClicked","key","onClick","it","index","length","undefined","style","border","borderWidth","borderStyle","config","onClickLink","promises","find","from","to","Promise","all","imports","marginLeft","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f713c3ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Navbar() {\n    return (\n        <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/#\">\n                    Cycle-hunter 9000\n                </a>\n            </div>\n        </nav>\n    );\n}","import Axios, {AxiosResponse} from \"axios\";\nimport {CycleList, ImportInfo, Package} from \"./Model\";\n\nfunction extractData<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nexport function getCycleList(): Promise<CycleList> {\n    return Axios.get<CycleList>(\"/cycles\").then(extractData);\n}\n\nexport function getGraphForCycle(cycleId: number): Promise<Array<Package>> {\n    return Axios.get<Array<Package>>(`/cycle/${cycleId}`).then(extractData);\n}\n\nexport function getImportsFromTo(from: string, to: string): Promise<ImportInfo> {\n    return Axios.get<ImportInfo>(`/imports/${from}/${to}`).then(extractData);\n}\n\nexport function getCompleteGraph(): Promise<Array<Package>> {\n    return Axios.get<Array<Package>>(\"/graph\").then(extractData);\n}\n\n","export const graphConfig = {\n    \"automaticRearrangeAfterDropNode\": true,\n    \"collapsible\": true,\n    \"directed\": true,\n    \"focusAnimationDuration\": 0,\n    \"focusZoom\": 1,\n    \"height\": 800,\n    \"highlightDegree\": 2,\n    \"highlightOpacity\": 1,\n    \"linkHighlightBehavior\": true,\n    \"maxZoom\": 8,\n    \"minZoom\": 0.1,\n    \"nodeHighlightBehavior\": true,\n    \"panAndZoom\": false,\n    \"staticGraph\": false,\n    \"staticGraphWithDragAndDrop\": false,\n    \"width\": 1500,\n    \"d3\": {\n        \"alphaTarget\": 0.05,\n        \"gravity\": -200,\n        \"linkLength\": 300,\n        \"linkStrength\": 1,\n        \"disableLinkForce\": false\n    },\n    \"node\": {\n        \"color\": \"grey\",\n        \"fontColor\": \"black\",\n        \"fontSize\": 15,\n        \"fontWeight\": \"normal\",\n        \"highlightColor\": \"orange\",\n        \"highlightFontSize\": 8,\n        \"highlightFontWeight\": \"normal\",\n        \"highlightStrokeColor\": \"SAME\",\n        \"highlightStrokeWidth\": \"SAME\",\n        \"labelProperty\": \"id\",\n        \"mouseCursor\": \"pointer\",\n        \"opacity\": 1,\n        \"renderLabel\": true,\n        \"size\": 100,\n        \"strokeColor\": \"none\",\n        \"strokeWidth\": 1.5,\n        \"svg\": \"\",\n        \"symbolType\": \"circle\"\n    },\n    \"link\": {\n        \"color\": \"#d3d3d3\",\n        \"fontColor\": \"black\",\n        \"fontSize\": 8,\n        \"fontWeight\": \"normal\",\n        \"highlightColor\": \"black\",\n        \"highlightFontSize\": 8,\n        \"highlightFontWeight\": \"normal\",\n        \"labelProperty\": \"label\",\n        \"mouseCursor\": \"pointer\",\n        \"opacity\": 1,\n        \"renderLabel\": false,\n        \"semanticStrokeWidth\": false,\n        \"strokeWidth\": 2,\n        \"markerHeight\": 3,\n        \"markerWidth\": 3\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css'\nimport {Navbar} from \"./Navbar\";\nimport {Graph} from \"react-d3-graph\";\nimport {getCompleteGraph, getCycleList, getGraphForCycle, getImportsFromTo} from \"./ApiClient\";\nimport {CycleList, GraphData, ImportInfo, Package} from \"./Model\";\nimport {graphConfig} from \"./Config\";\n\ninterface State {\n    cycles: CycleList,\n    graphData: GraphData,\n    description: Array<ImportInfo>\n}\n\nfunction App() {\n    let [state, setState] = useState<State>({\n        cycles: [],\n        graphData: {nodes: [], links: []},\n        description: []\n    })\n    useEffect(() => {\n        getCycleList().then(_ => setState(s => ({...s, cycles: _})))\n    }, [])\n\n    const onClickLink = (source: string, target: string) => {\n        const pairs = state.graphData.links.find(_ => _.source === target && _.target === source) === undefined\n            ? [[source, target]]\n            : [[target, source], [source, target]];\n        const promises = pairs.map(_ => getImportsFromTo(_[0], _[1]));\n        Promise.all(promises)\n            .then(_ => setState({\n                ...state,\n                description: _.map(it => ({from: it.from, to: it.to, imports: it.imports}))\n            }));\n    };\n\n    const constructGraphDataFromPackages = (packages: Array<Package>): GraphData => {\n        return {\n            nodes: packages.map(_ => ({id: _.name})),\n            links: packages.flatMap(p => p.uses.map(_ => ({source: p.name, target: _})))\n        };\n    }\n\n    const cycleClicked = (cycleIndex: number) => {\n        getGraphForCycle(cycleIndex)\n            .then(constructGraphDataFromPackages)\n            .then(_ => setState({...state, graphData: _}))\n    }\n\n    function cycleList(cycles: CycleList): JSX.Element[] {\n        return cycles.map((it, index) => <a\n                        key={index}\n                        href=\"/#\"\n                        className=\"list-item\"\n                        onClick={_ => cycleClicked(index)}>\n                        {it.length} item cycle\n                    </a>\n                )\n    }\n\n    const showCompleteGraphClicked = () => {\n        getCompleteGraph()\n            .then(constructGraphDataFromPackages)\n            .then(_ => setState({...state, graphData: _}))\n    }\n\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <div className=\"\">\n                <div className=\"columns is-marginless\">\n                    <div className=\"column is-one-fifth\">\n                        <div className=\"list\">\n                            <a\n                                key=\"complete-graph\"\n                                href=\"/#\"\n                                className=\"list-item\"\n                                onClick={_ => showCompleteGraphClicked()}>\n                                Complete dependency graph\n                            </a>\n                            {cycleList(state.cycles)}\n                        </div>\n                    </div>\n                    <div className=\"column\">\n                        {state.graphData.nodes.length === 0\n                            ? undefined\n                            : <div style={{border: \"black\", borderWidth: 1, borderStyle: \"dashed\"}}>\n                                <Graph\n                                    id=\"cycle-graph\"\n                                    data={state.graphData}\n                                    config={graphConfig}\n                                    onClickLink={onClickLink}/>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className=\"columns\" style={{marginLeft: \"auto\"}}>\n                    {state.description.map(_ => <div className=\"column\">\n                        <table className=\"table\">\n                            <thead>\n                            <tr>\n                                <th className=\"has-text-centered\">{`${_.to} imports in ${_.from}`}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {_.imports.map(i => <tr className=\"has-text-left\">{i}</tr>)}\n                            </tbody>\n                        </table>\n                    </div>)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}